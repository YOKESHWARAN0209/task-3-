# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x7DJeGV1hOwwLlB9CxeZvOb0L6fr11tu
"""



import pandas as pd

df = pd.read_csv('/content/Housing.csv')
display(df.head())

# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics

# Load the dataset
df = pd.read_csv('/content/Housing.csv')

# Display the first few rows of the dataframe
print(df.head())

# List of columns to map from 'yes'/'no' to 1/0
binary_cols = ['mainroad', 'guestroom', 'basement', 'hotwaterheating', 'airconditioning', 'prefarea']

# Apply the mapping
df[binary_cols] = df[binary_cols].apply(lambda x: x.map({'yes': 1, 'no': 0}))

# Use get_dummies for one-hot encoding of 'furnishingstatus'
status = pd.get_dummies(df['furnishingstatus'], drop_first=True)
df = pd.concat([df, status], axis=1)
df.drop(['furnishingstatus'], axis=1, inplace=True)

# Display the first few rows after preprocessing
print(df.head())

# Simple Linear Regression
X_simple = df[['area']]
y_simple = df['price']

# Split data into training and testing sets
X_train_simple, X_test_simple, y_train_simple, y_test_simple = train_test_split(X_simple, y_simple, test_size=0.3, random_state=101)

# Create and train the model
lr_simple = LinearRegression()
lr_simple.fit(X_train_simple, y_train_simple)

# Make predictions
predictions_simple = lr_simple.predict(X_test_simple)

# Evaluate the model
print('Simple Linear Regression Metrics:')
print('MAE:', metrics.mean_absolute_error(y_test_simple, predictions_simple))
print('MSE:', metrics.mean_squared_error(y_test_simple, predictions_simple))
print('R2 Score:', metrics.r2_score(y_test_simple, predictions_simple))

# Plotting the regression line
plt.figure(figsize=(10, 6))
plt.scatter(X_test_simple, y_test_simple, color='gray')
plt.plot(X_test_simple, predictions_simple, color='red', linewidth=2)
plt.xlabel('Area')
plt.ylabel('Price')
plt.title('Simple Linear Regression: Area vs. Price')
plt.show()

# Multiple Linear Regression
X_multi = df.drop('price', axis=1)
y_multi = df['price']

# Split data
X_train_multi, X_test_multi, y_train_multi, y_test_multi = train_test_split(X_multi, y_multi, test_size=0.3, random_state=101)

# Create and train the model
lr_multi = LinearRegression()
lr_multi.fit(X_train_multi, y_train_multi)

# Make predictions
predictions_multi = lr_multi.predict(X_test_multi)

# Evaluate the model
print('Multiple Linear Regression Metrics:')
print('MAE:', metrics.mean_absolute_error(y_test_multi, predictions_multi))
print('MSE:', metrics.mean_squared_error(y_test_multi, predictions_multi))
print('R2 Score:', metrics.r2_score(y_test_multi, predictions_multi))

# Interpret the coefficients
coeff_df = pd.DataFrame(lr_multi.coef_, X_multi.columns, columns=['Coefficient'])
print(coeff_df)